// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Premier.Context;

namespace Premier.Migrations
{
    [DbContext(typeof(TournamentContext))]
    [Migration("20210222150236_FirstMigration")]
    partial class FirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Premier.Models.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("CityTown")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StadiumName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LocationId");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            LocationId = 1,
                            Address1 = "75 Drayton Park",
                            Capacity = 60338,
                            CityTown = "London",
                            Country = "England",
                            StadiumName = "Emirates Stadium"
                        });
                });

            modelBuilder.Entity("Premier.Models.Match", b =>
                {
                    b.Property<int>("MatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Result")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Team1TeamId")
                        .HasColumnType("int");

                    b.Property<int?>("Team2TeamId")
                        .HasColumnType("int");

                    b.Property<int?>("TournamentId")
                        .HasColumnType("int");

                    b.HasKey("MatchId");

                    b.HasIndex("Team1TeamId");

                    b.HasIndex("Team2TeamId");

                    b.HasIndex("TournamentId");

                    b.ToTable("Matches");

                    b.HasData(
                        new
                        {
                            MatchId = 1,
                            Result = "3:1",
                            Team1TeamId = 1,
                            Team2TeamId = 2,
                            TournamentId = 1
                        },
                        new
                        {
                            MatchId = 2,
                            Result = "3:2",
                            Team1TeamId = 3,
                            Team2TeamId = 4,
                            TournamentId = 1
                        });
                });

            modelBuilder.Entity("Premier.Models.Team", b =>
                {
                    b.Property<int>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeamName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TeamId");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            TeamId = 1,
                            City = "London",
                            Country = "England",
                            TeamName = "Arsenal"
                        },
                        new
                        {
                            TeamId = 2,
                            City = "London",
                            Country = "England",
                            TeamName = "Chelsea"
                        },
                        new
                        {
                            TeamId = 3,
                            City = "Lisbona",
                            Country = "Portugal",
                            TeamName = "Sporting"
                        },
                        new
                        {
                            TeamId = 4,
                            City = "Madrid",
                            Country = "Spain",
                            TeamName = "Real"
                        });
                });

            modelBuilder.Entity("Premier.Models.Tournament", b =>
                {
                    b.Property<int>("TournamentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NickName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfTeam")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartEventDate")
                        .HasColumnType("datetime2");

                    b.HasKey("TournamentId");

                    b.HasIndex("LocationId");

                    b.ToTable("Tournaments");

                    b.HasData(
                        new
                        {
                            TournamentId = 1,
                            LocationId = 1,
                            Name = "Dinosaur Cup",
                            NickName = "Tyro",
                            NumberOfTeam = 4,
                            StartEventDate = new DateTime(2022, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Premier.Models.Match", b =>
                {
                    b.HasOne("Premier.Models.Team", "Team1")
                        .WithMany()
                        .HasForeignKey("Team1TeamId");

                    b.HasOne("Premier.Models.Team", "Team2")
                        .WithMany()
                        .HasForeignKey("Team2TeamId");

                    b.HasOne("Premier.Models.Tournament", "Tournament")
                        .WithMany("Matches")
                        .HasForeignKey("TournamentId");

                    b.Navigation("Team1");

                    b.Navigation("Team2");

                    b.Navigation("Tournament");
                });

            modelBuilder.Entity("Premier.Models.Tournament", b =>
                {
                    b.HasOne("Premier.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("Premier.Models.Tournament", b =>
                {
                    b.Navigation("Matches");
                });
#pragma warning restore 612, 618
        }
    }
}
